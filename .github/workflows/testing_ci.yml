name: Testing Workflow

on:
  pull_request:
  release:
  push:
    branches:
      - main

jobs:

  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set Python environment
        uses: actions/setup-python@v1
        with:
          python-version: 3.9
          architecture: x64

      - name: Install dependencies
        run: |
          python -m pip install setuptools --upgrade
          python -m pip install flake8 black

      - name: Lint with flake8
        run: flake8

      - name: Check code format with Black
        run: black --check .


  unit_tests:
    needs: linting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install setuptools --upgrade
        sudo apt-get install libsqlite3-mod-spatialite
        sudo apt-get install -y libspatialite-dev
        sudo ln -s /usr/lib/x86_64-linux-gnu/mod_spatialite.so /usr/lib/x86_64-linux-gnu/mod_spatialite
        pip install -r tests/requirements_test.txt

    - name: Runs unit tests
      run: |
        python -m unittest

  build_documentation:
    needs: linting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        sudo apt-get install -y pandoc
        python -m pip install setuptools --upgrade
        python -m pip install sphinx-gallery --user
        python -m pip install wheel spatialite
        sudo apt-get install libsqlite3-mod-spatialite
        sudo apt-get install -y libspatialite-dev
        sudo ln -s /usr/lib/x86_64-linux-gnu/mod_spatialite.so /usr/lib/x86_64-linux-gnu/mod_spatialite
        pip install -r tests/requirements_test.txt
        pip install -r docs/requirements_docs.txt

    - name: Builds documentation
      run: |
        cd docs
        make html

    - name: Keeps documentation on GitHub
      uses: actions/upload-artifact@v2
      with:
        name: documentation
        path: docs/build/
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
        
    - name: Deploy ðŸš€
      if: github.event_name == 'push'
      uses: JamesIves/github-pages-deploy-action@4.1.4
      with:
        branch: gh-pages # The branch the action should deploy to.
        folder: docs/build/html # The folder the action should deploy.

  builds_package:
    needs: build_documentation
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v1
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        sudo apt-get install -y pandoc
        python -m pip install setuptools --upgrade
        python -m pip install wheel poetry
        poetry install

    - name: Builds package
      run: poetry build

    - name: Stores artifacts along with the workflow result
      uses: actions/upload-artifact@v2
      with:
        name: library
        path: dist/*.whl
        if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

    - name: Publish wheels to PyPI
      if: ${{ github.event_name == 'release'}}
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m pip install twine
        twine upload dist/*.whl
        twine upload dist/*.gz
